# =============================================================================
# DOCKER COMPOSE OVERRIDE FOR DEVELOPMENT/TESTING
# This file provides a simplified setup for testing the Dockerfiles
# =============================================================================

version: '3.8'

services:
  # =============================================================================
  # DEVELOPMENT DATABASE
  # =============================================================================
  postgres-dev:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: smartattend_dev
      POSTGRES_USER: smartattend
      POSTGRES_PASSWORD: dev_password_123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - smartattend-dev

  # =============================================================================
  # DEVELOPMENT REDIS
  # =============================================================================
  redis-dev:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --requirepass dev_redis_123
    networks:
      - smartattend-dev

  # =============================================================================
  # BACKEND SERVICE (Development)
  # =============================================================================
  backend-dev:
    build:
      context: ../nnp-smart-roster-backend
      dockerfile: Dockerfile
      args:
        BUILD_DATE: "${BUILD_DATE:-$(date -u +%Y-%m-%dT%H:%M:%SZ)}"
        VCS_REF: "${VCS_REF:-dev}"
        VERSION: "${VERSION:-dev}"
    image: smartattend-backend:dev
    environment:
      # Database Configuration
      DATABASE_URL: "postgresql://smartattend:dev_password_123@postgres-dev:5432/smartattend_dev"
      
      # Redis Configuration
      REDIS_URL: "redis://:dev_redis_123@redis-dev:6379/0"
      
      # Django Configuration
      DJANGO_SECRET_KEY: "dev-secret-key-change-in-production-123456789"
      DJANGO_DEBUG: "False"
      DJANGO_SETTINGS_MODULE: "smartAttend.settings"
      DJANGO_ALLOWED_HOSTS: "localhost,127.0.0.1,backend-dev"
      
      # Application Configuration
      DEPLOYMENT_MODE: "supervisor"
      GUNICORN_WORKERS: "2"
      GUNICORN_THREADS: "2"
      
      # Superuser (for testing)
      DJANGO_SUPERUSER_USERNAME: "admin"
      DJANGO_SUPERUSER_PASSWORD: "dev_admin_123"
      DJANGO_SUPERUSER_EMAIL: "admin@example.com"
    ports:
      - "8000:8000"
    depends_on:
      - postgres-dev
      - redis-dev
    volumes:
      - backend_logs:/app/logs
      - backend_media:/app/media
    networks:
      - smartattend-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # =============================================================================
  # FRONTEND SERVICE (Development)  
  # =============================================================================
  frontend-dev:
    build:
      context: ../nnp-smart-roster-frontend/smart-attendance
      dockerfile: Dockerfile
      args:
        BUILD_DATE: "${BUILD_DATE:-$(date -u +%Y-%m-%dT%H:%M:%SZ)}"
        VCS_REF: "${VCS_REF:-dev}"
        VERSION: "${VERSION:-dev}"
    image: smartattend-frontend:dev
    environment:
      # Node.js Configuration
      NODE_ENV: "production"
      PORT: "3000"
      
      # API Configuration
      NEXT_PUBLIC_API_URL: "http://backend-dev:8000"
      API_URL: "http://backend-dev:8000"
      
      # Application Configuration
      APP_VERSION: "${VERSION:-dev}"
      BUILD_TIME: "${BUILD_DATE:-$(date -u +%Y-%m-%dT%H:%M:%SZ)}"
      NEXT_VERSION: "15.2.4"
    ports:
      - "3000:3000"
    depends_on:
      - backend-dev
    networks:
      - smartattend-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # =============================================================================
  # NGINX LOAD BALANCER (Development)
  # =============================================================================
  nginx-dev:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend-dev
      - frontend-dev
    networks:
      - smartattend-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3

# =============================================================================
# NETWORKS
# =============================================================================
networks:
  smartattend-dev:
    driver: bridge
    name: smartattend-dev-network

# =============================================================================
# VOLUMES
# =============================================================================
volumes:
  postgres_dev_data:
    name: smartattend_postgres_dev_data
  backend_logs:
    name: smartattend_backend_logs_dev
  backend_media:
    name: smartattend_backend_media_dev
